version: "3.7"
services:
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    image: web
    restart: on-failure
    environment:
      MYSQL_DB: online_shop
      MYSQL_DB_USER: user
      MYSQL_DB_PASSWORD: 123
      MYSQL_DB_HOST: mysql
      NODE_ENV: production
      rabbitURL: amqp://rabbitmq
    depends_on:
      - mysql
      - rabbitmq
    ports:
      - 3000:3000
  users-collector:
    container_name: users-collector
    image: users-collector
    build:
      context: ./users-collector
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      MYSQL_DB: online_shop
      MYSQL_DB_USER: user
      MYSQL_DB_PASSWORD: 123
      MYSQL_DB_HOST: mysql
      NODE_ENV: production
      rabbitURL: amqp://rabbitmq
    depends_on:
      - mysql
      - rabbitmq
  logger:
    container_name: logger
    image: logger
    build:
      context: ./logger
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      MONGO_URI: mongodb://mongo/shop_logger
      rabbitURL: amqp://rabbitmq
    depends_on:
      - mongo
      - rabbitmq
  mongo:
    container_name: mongo
    image: mongo
    ports:
      - 27017:27017
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: on-failure
    environment:
      MYSQL_DATABASE: online_shop
      MYSQL_USER: user
      MYSQL_PASSWORD: 123
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3307:3306
    volumes:
      - ./volumes/mysql:/var/lib/mysql
